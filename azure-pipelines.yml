# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
stage: build 
displayName: 'Build stage'
jobs:
  - job: BuildJob
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'  
    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yamlpipeline for more information.
      displayName: 'Run a multi-line script'      
    

stage: Terraform
displayName: 'Build resource group with Terraform'
jobs:
  - job: TerraformJob
    steps:
    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '1.13.1'

    - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      displayName: 'Run terraform init'
      inputs:
        command: init
        workingDirectory: '$(System.DefaultWorkingDirectory)/demo890'

Stage: deploy
dependsOn: Terraform/build
displayName: 'Deploy to Azure'
jobs:
  - deployment: DeployJob
    environment: 'demo890-env'
    strategy:
      runOnce:          
        deploy:
          steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'AzureServiceConnection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deploying to Azure"
                az group create --name demo890-rg --location eastus
            displayName: 'Run Azure CLI command'    